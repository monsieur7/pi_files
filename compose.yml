version: '3'
#https://docs.docker.com/compose/gettingstarted/
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus  # Mount volume for persistent Prometheus storage
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true 
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped # Restart the container unless it was explicitly stopped

  mqtt2prometheus:
    image: hikhvar/mqtt2prometheus:latest
    container_name: mqtt2prometheus
    entrypoint: 
      - /mqtt2prometheus
      - -log-level=debug
    volumes:
      - ./mqtt.yml:/config/mqtt.yml  # Mounting the config file
    command: -config=/config/mqtt.yml  # Using the custom config file
    ports:
      - "9641:9641" # Exposing the mqtt2prometheus metrics port
    #mqtt2prometheus: can listen to port 1883 :
    depends_on:
      - prometheus
      - mosquitto
    restart: unless-stopped
  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
    expose:
      - 1883
    volumes:
      - ./mosquitto:/etc/mosquitto
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/passwd:/mosquittwo/config/passwd
  prometheus_python:
       image: prom/prometheus-python:latest
       build:
         context: ./promethus_python/
         dockerfile: Dockerfile
       container_name: prometheus_python
       volumes:
         - ./prometheus_python:/etc/prometheus_python
       ports:
         - "5000:5000"
         # give access to /dev/ttyACM0
       devices:
         - "/dev/ttyACM0:/dev/ttyACM0"
       depends_on:
         - prometheus
       restart: unless-stopped
volumes:
  grafana:
    driver: local
  prometheus_data:
    driver: local
   